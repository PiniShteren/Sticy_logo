{"version":3,"sources":["src/fonts/AppliedSansProCnBd.ttf","src/fonts/Poppins-Bold.ttf","src/fonts/hemi_head.ttf","src/fonts/impact.ttf","src/components/Popup.js","src/components/Colors.js","src/components/Fonts.js","src/components/Order.js","src/components/Sticy.js","src/components/TextUser.js","src/components/CountWidth.js","App.js","webpack:///./src/style.css?d076","src/style.css","src/fonts/DEADJIM.TTF"],"names":["module","exports","Popup","flag","setFlag","children","popupRef","type","Modal","visible","transparent","animationType","View","style","alignItems","justifyContent","height","nativeID","width","backgroundColor","borderRadius","ref","position","top","right","paddingHorizontal","Pressable","onPress","hovered","Text","color","fontSize","fontWeight","lineHeight","transform","scale","marginVertical","ScrollView","maxHeight","contentContainerStyle","flexWrap","flexDirection","StyleSheet","create","Fonts","text","font","fontsArr","setFont","sort","useRef","useState","shadow","setShadow","useEffect","window","addEventListener","target","current","contains","direction","onFocus","onBlur","borderColor","borderWidth","padding","outlineStyle","marginRight","fontFamily","name","Array","isArray","map","e","i","display","paddingVertical","shadowColor","shadowOffset","shadowOpacity","shadowRadius","upper","toUpperCase","Order","price","sendMail","amountState","marginTop","btn","textAlign","Sticy","dark","inputRef","setText","pan","Animated","ValueXY","textRef","imgRef","responder","PanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","touchHistory","setOffset","y","_value","x","onPanResponderMove","event","dy","dx","useNativeDriver","onPanResponderRelease","state","flattenOffset","background","setBackground","setFontSize","minFontSize","setMinFontSize","maxFontSize","setMaxFontSize","widthCurrent","setWidthCurrent","heightCurrent","setHeightCurrent","setStyle","loading","setLoading","path","setPath","checkFontsize","textTag","document","querySelector","widthText","getBoundingClientRect","match","length","divWidth","maxLength","getBBox","slice","j","useMemo","changeSize","setTimeout","Promise","reslove","reject","TextToSVG","load","err","textToSVG","svg1","getD","kerning","tracking","getDPath","createPath","fontStyle","italic","bold","letterSpacing","latterSpacing","flex","paddingLeft","zIndex","left","animationData","Loading","autoPlay","loop","version","xmlns","viewBox","preserveAspectRatio","fill","stroke","d","translateY","translateX","cursor","panHandlers","id","verticalAnchor","TextUser","TextInput","value","onChangeText","txt","CountWidth","setWidth","marginBottom","onChange","checked","App","fontsArrState","require","setFontsArr","size","setPrice","createImage","div","svg","elementToSVG","btoa","XMLSerializer","serializeToString","amount","image","img","createElement","src","JSON","stringify","from","amonut","file","link","href","download","click","Dimensions","get","eCurrent","temp","filter","splice","am","api","content","__esModule","default","options","locals","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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","file":"static/js/app.1b1d9306.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/AppliedSansProCnBd.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/hemi_head.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/impact.ttf\";","import { Modal, Pressable, ScrollView, StyleSheet, Text, View } from 'react-native'\r\nimport React from 'react'\r\n\r\nexport default function Popup({ flag, setFlag, children, popupRef, type }) {\r\n    return (\r\n        <Modal visible={flag} transparent={true} animationType=\"fade\">\r\n            <View style={{\r\n                // backgroundColor: \"#0000008c\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                height: \"100%\"\r\n            }}>\r\n                <View\r\n                    nativeID='popup'\r\n                    style={{\r\n                        width: \"40vw\",\r\n                        backgroundColor: \"#fff\",\r\n                        alignItems: \"center\",\r\n                        borderRadius: \"2vw\"\r\n                        // paddingHorizontal: \"3vw\",\r\n                        // paddingVertical: \"3vw\",\r\n                    }}\r\n                    ref={popupRef}\r\n                >\r\n                    <View\r\n                        style={{ position: \"absolute\", top: \"1.5vw\", right: \"1.5vw\", paddingHorizontal: \"vw\", }}\r\n                    >\r\n                        <Pressable onPress={() => setFlag(!flag)}>\r\n                            {({ hovered }) =>\r\n                                (<Text style={{ color: \"gray\", fontSize: \"1.1vw\", fontWeight: \"500\", lineHeight: \"1.1vw\", transform: [{scale: hovered ? 1.1 : 1}] }}>X</Text>)}\r\n                        </Pressable>\r\n                    </View>\r\n                    <Text style={{ color: \"gray\", marginVertical: \"0.3vw\", fontSize: \"1.6vw\", fontWeight: \"500\" }}>בחר פונט</Text>\r\n                    <ScrollView\r\n                        style={{\r\n                            maxHeight: \"30vw\",\r\n                            marginVertical: \"3vw\",\r\n                            width: \"100%\"\r\n                        }}\r\n                        contentContainerStyle={[type === \"font\" ? {\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"flex-start\"\r\n                        } : {\r\n                            flexWrap: \"wrap\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\"\r\n                        }]}\r\n                    >\r\n                        {children}\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})","import { Modal, Pressable, ScrollView, StyleSheet, Text, View } from 'react-native'\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Popup from './Popup';\r\n\r\nexport default function Colors({ color, colorsArr, setColor, setDark }) {\r\n    const popupRef = useRef(null);\r\n    const [flag, setFlag] = useState(false);\r\n    const [shadow, setShadow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"mousedown\", ({ target }) => {\r\n            if (popupRef.current && !flag && !popupRef.current.contains(target)) {\r\n                setFlag(false);\r\n            }\r\n        })\r\n    }, [flag, popupRef]);\r\n    return (\r\n        <View style={{ direction: \"rtl\" }}>\r\n            <Text style={{ fontSize: \"1.6vw\", color: \"gray\", fontWeight: \"500\" }}>צבע</Text>\r\n            <Pressable\r\n                onFocus={() => setShadow(true)}\r\n                onBlur={() => setShadow(false)}\r\n                onPress={() => setFlag(!flag)}\r\n                style={{\r\n                    direction: \"rtl\",\r\n                    borderColor: shadow ? \"#1abc9c\" : \"#c9c9c9\",\r\n                    borderWidth: 1,\r\n                    fontSize: \"1.8vw\",\r\n                    width: \"40vw\",\r\n                    height: \"8vh\",\r\n                    padding: \"0.2vw\",\r\n                    outlineStyle: \"none\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\"\r\n                }}\r\n            >\r\n                <View style={{ borderWidth: 1, borderRadius: \"50%\", borderColor: \"black\", width: \"2vw\", height: \"2vw\", backgroundColor: color.color }} />\r\n                <Text\r\n                    style={{ marginRight: \"0.5vw\", fontSize: \"1.4vw\", lineHeight: \"1.4vw\", color: \"#1abc9c\", fontWeight: \"500\" }}\r\n                >{color.name}</Text>\r\n            </Pressable>\r\n            <Popup flag={flag} setFlag={setFlag} popupRef={popupRef}>\r\n                {Array.isArray(colorsArr) && colorsArr.map((e, i) => {\r\n                    return (\r\n                        <Pressable\r\n                            key={i}\r\n                            onPress={() => { setColor(e); setDark(e.dark); setFlag(!flag) }}\r\n                            style={({ hovered }) => [{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                width: \"10vw\",\r\n                                alignItems: \"center\",\r\n                                paddingVertical: \"0.3vw\"\r\n                            },]}\r\n                        >\r\n                            {({ hovered }) => (\r\n                                <>\r\n                                    <View\r\n                                        nativeID={hovered && \"popup\"}\r\n                                        style={[{\r\n                                            width: \"5.6vw\",\r\n                                            height: \"5.6vw\",\r\n                                            borderRadius: \"50%\",\r\n                                            borderColor: \"black\",\r\n                                            borderWidth: 1,\r\n                                            backgroundColor: e.color,\r\n                                        },]}\r\n                                    />\r\n                                    <Text style={{fontWeight: hovered ? \"bold\" : \"\"}}>{e.name}</Text>\r\n                                </>\r\n                            )}\r\n                        </Pressable>\r\n                    )\r\n                })}\r\n            </Popup>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})","import { Pressable, StyleSheet, Text, View, Modal, ScrollView } from 'react-native'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport Popup from './Popup';\r\n\r\nexport default function Fonts({ text, font, fontsArr, setFont, sort }) {\r\n    const popupRef = useRef(null);\r\n    const [flag, setFlag] = useState(false);\r\n    const [shadow, setShadow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"mousedown\", ({ target }) => {\r\n            if (popupRef.current && !flag && !popupRef.current.contains(target)) {\r\n                setFlag(false);\r\n            }\r\n        })\r\n    }, [flag, popupRef]);\r\n    return (\r\n        <View style={{ direction: \"rtl\" }}>\r\n            <Text style={{ fontSize: \"1.6vw\", color: \"gray\", fontWeight: \"500\" }}>פונט</Text>\r\n            <Pressable\r\n                onFocus={() => setShadow(true)}\r\n                onBlur={() => setShadow(false)}\r\n                onPress={() => setFlag(!flag)}\r\n                style={{\r\n                    direction: \"rtl\",\r\n                    borderColor: shadow ? \"#1abc9c\" : \"#c9c9c9\",\r\n                    borderWidth: 1,\r\n                    fontSize: \"1.8vw\",\r\n                    width: \"40vw\",\r\n                    height: \"8vh\",\r\n                    padding: \"0.2vw\",\r\n                    outlineStyle: \"none\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\"\r\n                }}\r\n            >\r\n                <Text\r\n                    style={{ marginRight: \"0.6vw\", fontSize: \"1.5vw\", lineHeight: \"0.7vw\", color: \"#1abc9c\", fontWeight: \"500\", fontFamily: font.name }}\r\n                >{text}</Text>\r\n            </Pressable>\r\n            <Popup flag={flag} setFlag={setFlag} popupRef={popupRef} type={\"font\"}>\r\n                {Array.isArray(fontsArr) && fontsArr.map((e, i) => {\r\n                    return (\r\n                        <Pressable\r\n                            key={i}\r\n                            onPress={() => { setFont(e); setFlag(!flag); }}\r\n                            style={({ hovered }) => [{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                width: \"30vw\",\r\n                                alignItems: \"center\",\r\n                                paddingVertical: \"0.8vw\",\r\n                                marginVertical: \"0.4vw\",\r\n                            }, hovered && { backgroundColor: \"#c3c3c3\" }, e.name === font.name && {\r\n                                borderColor: \"#a5a4a4\",\r\n                                borderWidth: 1,\r\n                                shadowColor: \"black\",\r\n                                shadowOffset: { width: 0, height: 0 },\r\n                                shadowOpacity: 0.4,\r\n                                shadowRadius: 5\r\n                            }]}\r\n                        >\r\n                            <Text style={{ color: \"gray\", fontWeight: \"400\", fontSize: \"1.2vw\" }}>Font: {e.name}</Text>\r\n                            <Text style={{ color: \"gray\", fontFamily: e.name, fontWeight: \"500\", fontSize: \"1.5vw\" }}>{e.upper ? text.toUpperCase() : text }</Text>\r\n                        </Pressable>\r\n                    )\r\n                })}\r\n            </Popup>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})","import { Pressable, StyleSheet, Text, View, TextInput } from 'react-native'\r\nimport React, { useState } from 'react'\r\n\r\nexport default function Order({ price, sendMail }) {\r\n\r\n    const [current, setCurrent] = useState();\r\n    const [amountState, setamountState] = useState(1);\r\n    const [shadow, setShadow] = useState(false);\r\n\r\n    let amounts = [\r\n        1, 2, 5, 10, 25, 50, 100\r\n    ]\r\n    return (\r\n        <View style={{ alignItems: \"center\" }}>\r\n            {/* <Text style={{ fontSize: 15, fontWeight: \"700\", }}>בחר כמות</Text>\r\n            <View style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                {amounts.map((e, i) => {\r\n                    return (\r\n                        <Pressable onPress={() => setCurrent(i)} key={i} style={{ flexDirection: \"row-reverse\", width: \"10vw\", justifyContent: \"space-between\", backgroundColor: current === i ? \"#ffe6d0\" : \"\", }}>\r\n                            <Text style={{ fontSize: 15, fontWeight: \"600\", lineHeight: 25 }}>{e}</Text>\r\n                            <Text style={{ fontSize: 15, fontWeight: \"600\", lineHeight: 25 }}>{price * e}₪</Text>\r\n                        </Pressable>\r\n                    )\r\n                })}\r\n            </View> */}\r\n            <View style={{flexDirection: \"row\", alignItems: \"center\", marginTop: 10, width: \"100%\", justifyContent: \"center\"}}>\r\n                {/* <View\r\n                    nativeID='count'\r\n                    style={[{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        borderColor: \"#1abc9c\",\r\n                        borderWidth: 1,\r\n                        borderRadius: \"0.2vw\"\r\n                    }, shadow && {\r\n                        shadowColor: \"black\",\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.4,\r\n                        shadowRadius: 5\r\n                    }]}>\r\n                    <TextInput maxLength={2} value={amountState}\r\n                        onFocus={() => setShadow(!shadow)}\r\n                        onBlur={() => setShadow(!shadow)}\r\n                        editable={false}\r\n                        style={{\r\n                            outlineStyle: \"none\",\r\n                            width: 50,\r\n                            color: \"#1abc9c\",\r\n                            padding: \"0.2vw\",\r\n                            textAlignVertical: \"center\",\r\n                            textAlign: \"center\",\r\n                            fontSize: \"1.5vw\",\r\n                        }}\r\n                        type=\"num\" onChangeText={(num) => setWidth(num)} />\r\n                    <View>\r\n                        <Pressable onPress={() => {\r\n                            setamountState(amountState + 1)\r\n                        }} style={[styles.btn, { borderTopRightRadius: \"0.1vw\", }]}>\r\n                            <Text style={styles.text}>+</Text>\r\n                        </Pressable>\r\n                        <Pressable onPress={() => {\r\n                            setamountState(amountState > 0 ? amountState - 1 : 0);\r\n                        }} style={[styles.btn, { borderBottomRightRadius: \"0.1vw\", }]}>\r\n                            <Text style={styles.text}>-</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                </View> */}\r\n                <Pressable style={{backgroundColor: \"#5559e0\", padding: 9}} onPress={() => sendMail(amountState)}>\r\n                    <Text style={{color: \"white\", fontWeight: \"600\", fontSize: 19}}>הוספה לסל {price * amountState}₪</Text>\r\n                </Pressable>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    btn: {\r\n        borderColor: \"#d8d8d8\",\r\n        borderWidth: 1,\r\n        width: \"2vw\",\r\n        textAlign: \"center\"\r\n    },\r\n    text: {\r\n        fontSize: \"1.1vw\"\r\n    }\r\n})","import { ImageBackground, PanResponder, StyleSheet, View, Animated } from 'react-native'\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport Svg, { SvgProps, Path, Rect, G, Text } from \"react-native-svg\";\r\nimport Lottie from \"lottie-react\";\r\nimport Loading from \"../loading.json\";\r\nimport TextToSVG from \"text-to-svg\";\r\n// import Text from 'react-svg-text';\r\n\r\n\r\nexport default function Sticy({ text, color, font, dark, inputRef, width, setText }) {\r\n    const pan = useRef(new Animated.ValueXY()).current;\r\n    const textRef = useRef(null);\r\n    const imgRef = useRef(null);\r\n\r\n    // 76 מינימום לסטנדרט\r\n    // 94 מקסימום לסטנדרט\r\n    // 1096 * 132\r\n\r\n    // 57 מינימום למיני\r\n    // 76 מקסימום למיני\r\n    // 945 * 94\r\n\r\n\r\n    const responder = useRef(\r\n        PanResponder.create({\r\n            onMoveShouldSetPanResponder: () => true,\r\n            onPanResponderGrant: ({ touchHistory }) => {\r\n                pan.setOffset({\r\n                    y: pan.y._value,\r\n                    x: pan.x._value\r\n                });\r\n            },\r\n            onPanResponderMove: Animated.event(\r\n                [\r\n                    null,\r\n                    { dy: pan.y, dx: pan.x },\r\n                ],\r\n                {\r\n                    useNativeDriver: true\r\n                }),\r\n            onPanResponderRelease: (event, state) => {\r\n                pan.flattenOffset();\r\n            }\r\n        })\r\n    ).current;\r\n\r\n    const [background, setBackground] = useState(dark ? \"#0000007d\" : \"#f0f0f0\");\r\n    const [fontSize, setFontSize] = useState(width === \"s\" ? 94 : 76);\r\n    const [minFontSize, setMinFontSize] = useState(width === \"s\" ? 76 : 57);\r\n    const [maxFontSize, setMaxFontSize] = useState(width === \"s\" ? 94 : 76);\r\n    const [widthCurrent, setWidthCurrent] = useState(width === \"s\" ? 1096 : 945);\r\n    const [heightCurrent, setHeightCurrent] = useState(width === \"s\" ? 132 : 94);\r\n    const [style, setStyle] = useState();\r\n    const [loading, setLoading] = useState(false);\r\n    const [path, setPath] = useState(null);\r\n\r\n    const checkFontsize = async (text) => {\r\n        let textTag = document.querySelector(\"#text\");\r\n\r\n\r\n        if (textTag) {\r\n\r\n            let widthText = textTag?.getBoundingClientRect().width + (text?.match(/w/g)?.length > 1 ? 60 : 30);\r\n            let divWidth = textRef.current?.getBoundingClientRect().width;\r\n            if (widthText > divWidth) {\r\n\r\n                inputRef.current.maxLength = 24;\r\n\r\n                for (let i = fontSize; i >= minFontSize; i -= 1) {\r\n                    textTag.style.fontSize = i;\r\n                    widthText = textTag.getBBox().width + (text?.match(/w/g)?.length > 1 ? 60 : 30);\r\n                    divWidth = textRef.current?.getBoundingClientRect().width;\r\n                    if (widthText < divWidth) {\r\n                        await setFontSize(i);\r\n                        break;\r\n                    } else {\r\n                        continue;\r\n                    }\r\n                }\r\n                if (widthText > divWidth) {\r\n                    setText(text.slice(0, text.length - 1));\r\n                    inputRef.current.maxLength = text?.length - 1;\r\n                }\r\n            } else {\r\n                if (fontSize < maxFontSize) {\r\n                    for (let j = fontSize; j <= maxFontSize; j += 1) {\r\n                        textTag.style.fontSize = j;\r\n                        widthText = textTag?.getBoundingClientRect().width + (text?.match(/w/g)?.length > 1 ? 60 : 30);\r\n                        divWidth = textRef.current?.getBoundingClientRect().width;\r\n                        if (widthText + (text?.match(/w/g)?.length > 1 ? 60 : 30) < divWidth) {\r\n                            continue;\r\n                        } else {\r\n                            await setFontSize(j);\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (widthText < divWidth && inputRef.current.length < 24) {\r\n                        setText(text.slice(0, text.length + 1));\r\n                        inputRef.current.maxLength = text?.length + 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    useMemo(() => {\r\n        setBackground(dark ? \"#0000007d\" : \"#f0f0f0\");\r\n    }, [dark]);\r\n\r\n    const changeSize = async () => {\r\n        await setWidthCurrent(width === \"s\" ? 1096 : 945);\r\n        await setHeightCurrent(width === \"s\" ? 132 : 94);\r\n        await setFontSize(width === \"s\" ? 94 : 76);\r\n        await setMinFontSize(width === \"s\" ? 76 : 57);\r\n        await setMaxFontSize(width === \"s\" ? 94 : 76);\r\n        await setLoading(true);\r\n        setPath(false);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n        setTimeout(() => {\r\n            checkFontsize(text);\r\n        }, 500);\r\n    }\r\n\r\n    useMemo(() => {\r\n        changeSize();\r\n    }, [width]);\r\n\r\n\r\n    useMemo(() => {\r\n        setLoading(true);\r\n        setPath(false);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 1000);\r\n        setTimeout(() => {\r\n            checkFontsize(text);\r\n        }, 500);\r\n    }, [font, text]);\r\n\r\n    const getDPath = (style) => {\r\n        return new Promise((reslove, reject) => {\r\n            if (font.path) {\r\n                TextToSVG.load(font.path, (err, textToSVG) => {\r\n                    // debugger\r\n                    const svg1 = textToSVG.getD(text,\r\n                        {\r\n                            ...style,\r\n                            kerning: false,\r\n                            tracking: true\r\n                        }\r\n                    );\r\n                    setPath(svg1);\r\n                    reslove(svg1);\r\n                });\r\n            }\r\n        })\r\n    }\r\n    useMemo(() => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            setLoading(false);\r\n        }, 600);\r\n    }, [color]);\r\n    useMemo(() => {\r\n        getDPath(style);\r\n    }, [style]);\r\n\r\n    const createPath = async () => {\r\n        setPath(false);\r\n        await checkFontsize(text);\r\n        setTimeout(() => {\r\n            setStyle({\r\n                width: \"max-content\",\r\n                fontStyle: font.italic ? \"italic\" : \"normal\",\r\n                fontSize: fontSize,\r\n                fontFamily: font.name,\r\n                color: color,\r\n                fontWeight: font.bold ? \"bold\" : \"\",\r\n                lineHeight: fontSize,\r\n                letterSpacing: font.latterSpacing ? font.latterSpacing : \"0\",\r\n                x: width === \"s\" ? 15 : 11,\r\n                y: heightCurrent / 1.3\r\n            });\r\n        }, 500);\r\n    }\r\n    useEffect(() => {\r\n        createPath();\r\n    }, [fontSize, color, font, text]);\r\n\r\n    return (\r\n        <View style={{ flex: 1, alignItems: \"center\", maxHeight: \"19vw\" }}>\r\n            <View\r\n                ref={imgRef}\r\n                nativeID='image-background'\r\n                style={{\r\n                    flexDirection: 'row',\r\n                    alignItems: \"center\",\r\n                    width: widthCurrent,\r\n                    height: heightCurrent + 20,\r\n                    backgroundColor: background,\r\n                }}\r\n            >\r\n                <View\r\n                    nativeID='image-background2'\r\n                    style={{\r\n                        flexDirection: 'row',\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        paddingLeft: \"15px\",\r\n                        width: widthCurrent,\r\n                        height: heightCurrent + 20,\r\n                    }}\r\n                >\r\n                    {<>\r\n                        {loading && <View\r\n                            nativeID='loading'\r\n                            style={{\r\n                                width: \"100%\",\r\n                                height: heightCurrent + 20,\r\n                                position: \"absolute\",\r\n                                zIndex: 100,\r\n                                justifyContent: \"center\",\r\n                                alignItems: \"center\",\r\n                                left: 0\r\n                            }}>\r\n                            <Lottie\r\n                                animationData={Loading}\r\n                                style={{ width: \"100px\", height: \"100px\", }}\r\n                                autoPlay={true}\r\n                                loop={true}\r\n                            />\r\n                        </View>}\r\n                        {/* <Svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width={heightCurrent}\r\n                            height={heightCurrent}\r\n                            fill=\"currentColor\"\r\n                            className=\"bi bi-instagram\"\r\n                            stroke={\"\"}\r\n                            viewBox=\"-0.6 -0.6 17 17\"\r\n                            style={{ color: color }}\r\n                        >\r\n                            <Path d=\"M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.917 3.917 0 0 0-1.417.923A3.927 3.927 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.916 3.916 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.926 3.926 0 0 0-.923-1.417A3.911 3.911 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0h.003zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599.28.28.453.546.598.92.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.47 2.47 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.478 2.478 0 0 1-.92-.598 2.48 2.48 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233 0-2.136.008-2.388.046-3.231.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92.28-.28.546-.453.92-.598.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045v.002zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92zm-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217zm0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334z\" />\r\n                        </Svg> */}\r\n                        <Svg\r\n                            version=\"1.0\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width={heightCurrent}\r\n                            height={heightCurrent}\r\n                            viewBox=\"0 0 512.000000 512.000000\"\r\n                            preserveAspectRatio=\"xMidYMid meet\"\r\n                        >\r\n                            <G\r\n                                transform=\"translate(0.000000,512.000000) scale(0.100000,-0.100000)\"\r\n                                fill=\"currentColor\"\r\n                                style={{ color: color }}\r\n                                stroke=\"none\"\r\n                            >\r\n                                <Path\r\n                                    d=\"M1220 5105 c-628 -87 -1121 -584 -1206 -1215 -20 -155 -20 -2505 0\r\n-2660 42 -312 180 -592 402 -814 221 -221 502 -360 814 -402 155 -20 2505 -20\r\n2660 0 636 86 1130 580 1216 1216 20 155 20 2505 0 2660 -86 636 -580 1130\r\n-1216 1216 -148 19 -2526 19 -2670 -1z m2562 -445 c244 -23 445 -118 609 -287\r\n160 -165 246 -354 269 -591 13 -144 13 -2300 0 -2444 -23 -237 -109 -426 -269\r\n-591 -164 -169 -365 -264 -609 -287 -144 -13 -2300 -13 -2444 0 -244 23 -445\r\n118 -609 287 -160 165 -246 354 -269 591 -13 144 -13 2300 0 2444 23 244 118\r\n445 287 609 159 155 356 247 573 268 127 12 2333 13 2462 1z\"/>\r\n                                <Path\r\n                                    d=\"M3813 4239 c-75 -29 -144 -95 -178 -171 -97 -212 50 -453 284 -466\r\n113 -6 228 51 290 145 41 61 55 113 54 196 -2 222 -238 378 -450 296z\"/>\r\n                                <Path\r\n                                    d=\"M2380 3865 c-290 -41 -542 -167 -750 -375 -224 -223 -348 -488 -381\r\n-813 -33 -311 66 -658 260 -912 58 -77 179 -198 256 -256 254 -194 601 -293\r\n913 -260 324 33 589 157 812 381 224 223 348 488 381 812 27 257 -35 543 -168\r\n773 -268 466 -793 724 -1323 650z m380 -465 c311 -75 565 -329 640 -640 27\r\n-116 27 -284 0 -400 -59 -248 -233 -463 -463 -575 -126 -61 -233 -85 -377 -85\r\n-144 0 -251 24 -377 85 -230 112 -404 327 -463 575 -27 116 -27 284 0 400 74\r\n308 327 564 635 639 112 28 291 28 405 1z\"/>\r\n                            </G>\r\n                        </Svg>\r\n                        <Animated.View\r\n                            style={{ transform: [{ translateY: pan.y }, { translateX: pan.x }], flex: 1, cursor: \"all-scroll\" }}\r\n                            {...responder.panHandlers}\r\n                            ref={textRef}\r\n                        >\r\n                            <Svg\r\n                                fill={color}\r\n                                stroke={\"\"}\r\n                                style={{\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                    height: heightCurrent,\r\n                                }}\r\n                                id=\"text-svg\"\r\n                            >\r\n                                {path ? <Path\r\n                                    x={0}\r\n                                    y={10}\r\n                                    d={path}\r\n                                // style={{\r\n                                //     width: \"max-content\",\r\n                                //     fontStyle: font.italic ? \"italic\" : \"normal\",\r\n                                //     fontSize: `${fontSize}px`,\r\n                                //     fontFamily: font.name,\r\n                                //     color: color,\r\n                                //     fontWeight: font.bold ? \"bold\" : \"\",\r\n                                //     lineHeight: `${fontSize}px`,\r\n                                //     letterSpacing: font.latterSpacing ? font.latterSpacing : \"0\"\r\n                                // }}\r\n                                /> : <Text\r\n                                    x={0}\r\n                                    y={width === \"s\" ? heightCurrent / 3.5 : heightCurrent / 4.5}\r\n                                    id=\"text\"\r\n                                    style={{\r\n                                        width: \"max-content\",\r\n                                        fontStyle: font.italic ? \"italic\" : \"normal\",\r\n                                        fontSize: `${fontSize}px`,\r\n                                        fontFamily: font.name,\r\n                                        color: color,\r\n                                        fontWeight: font.bold ? \"bold\" : \"\",\r\n                                        lineHeight: `${fontSize}px`,\r\n                                        letterSpacing: font.latterSpacing ? font.latterSpacing : \"0\"\r\n                                    }}\r\n                                    verticalAnchor=\"start\"\r\n                                >{font.upper ? text.toUpperCase() : text}</Text>}\r\n                            </Svg>\r\n                        </Animated.View>\r\n                    </>\r\n                    }\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({})\r\n\r\n\r\n","import { StyleSheet, Text, TextInput, View } from 'react-native';\r\nimport React, { useState } from 'react';\r\n\r\nexport default function TextUser({text, setText, length, inputRef}) {\r\n  const [shadow, setShadow] = useState(false);\r\n  return (\r\n    <View style={{direction: \"rtl\"}}>\r\n      <Text style={{fontSize: \"1.6vw\", color: \"gray\", fontWeight: \"500\"}}>טקסט: <Text style={{fontSize: \"1vw\", color: \"gray\"}}>נא לכתוב בזהירות</Text></Text>\r\n      <TextInput\r\n      ref={inputRef}\r\n      value={text} \r\n      style={[{\r\n        borderColor: shadow ? \"#1abc9c\" : \"#c9c9c9\", \r\n        borderWidth: 1, \r\n        fontSize: \"1.8vw\", \r\n        width: \"40vw\",\r\n        height: \"8vh\",\r\n        paddingHorizontal: 10, \r\n        outlineStyle: \"none\"\r\n        }, shadow && {\r\n          shadowColor: \"black\",\r\n          shadowOffset: {width: 0, height: 0},\r\n          shadowOpacity: 0.4,\r\n          shadowRadius: 5\r\n      }]} \r\n      onFocus={() => setShadow(!shadow)}\r\n      onBlur={() => setShadow(!shadow)}\r\n      onChangeText={(txt) => setText(txt)}\r\n       maxLength={length} />\r\n      <Text style={{textAlign: \"right\", color: \"gray\", fontWeight: \"500\"}}>{24 - text?.length} תווים נשארו </Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({})","import { Pressable, StyleSheet, Text, TextInput, View } from 'react-native'\r\nimport React, { useState } from 'react'\r\n\r\nexport default function CountWidth({ width, setWidth }) {\r\n    const [shadow, setShadow] = useState(false);\r\n    return (\r\n        <View style={{ display: 'flex', flexDirection: \"column\", justifyContent: \"center\", width: \"100%\", alignItems: \"center\", marginBottom: \"2vw\" }}>\r\n            <Text style={{fontSize: 15, fontWeight: \"700\", marginBottom: 10 }}>בחר גודל:</Text>\r\n            <View style={{ alignItems: \"center\" }}>\r\n                {/* <View\r\n                    nativeID='count'\r\n                    style={[{\r\n                        flexDirection: \"row\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-between\",\r\n                        borderColor: \"#1abc9c\",\r\n                        borderWidth: 1,\r\n                        borderRadius: \"0.2vw\"\r\n                    }, shadow && {\r\n                        shadowColor: \"black\",\r\n                        shadowOffset: { width: 0, height: 0 },\r\n                        shadowOpacity: 0.4,\r\n                        shadowRadius: 5\r\n                    }]}>\r\n                    <TextInput maxLength={2} value={width}\r\n                        onFocus={() => setShadow(!shadow)}\r\n                        onBlur={() => setShadow(!shadow)}\r\n                        editable={false}\r\n                        style={{\r\n                            outlineStyle: \"none\",\r\n                            width: 50,\r\n                            color: \"#1abc9c\",\r\n                            padding: \"0.2vw\",\r\n                            textAlignVertical: \"center\",\r\n                            textAlign: \"center\",\r\n                            fontSize: \"1.5vw\",\r\n                        }}\r\n                        type=\"num\" onChangeText={(num) => setWidth(num)} />\r\n                    <View>\r\n                        <Pressable onPress={() => {\r\n                            if (width < 32) {\r\n                                setWidth(32);\r\n                            }\r\n                        }} style={[styles.btn, { borderTopRightRadius: \"0.1vw\", }]}>\r\n                            <Text style={styles.text}>+</Text>\r\n                        </Pressable>\r\n                        <Pressable onPress={() => {\r\n                            if (width === 32) {\r\n                                setWidth(24);\r\n                            }\r\n                        }} style={[styles.btn, { borderBottomRightRadius: \"0.1vw\", }]}>\r\n                            <Text style={styles.text}>-</Text>\r\n                        </Pressable>\r\n                    </View>\r\n                </View>\r\n                <Text style={{fontSize: 15, fontWeight: \"500\", marginRight: 10}}>W × 1.58 H</Text> */}\r\n                <form\r\n                onChange={({target}) => {setWidth(target.value)}}\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}>\r\n                    \r\n                    <input type={\"radio\"} name=\"size\" value={\"s\"} checked={width === \"s\"} />\r\n                    <label style={{fontSize: \"0.8vw\", color: \"gray\", fontWeight: \"500\"}}>סטדנדרט</label>\r\n                    <input type={\"radio\"} name=\"size\" value={\"m\"} checked={width === \"m\"} />\r\n                    <label style={{fontSize: \"0.8vw\", color: \"gray\", fontWeight: \"500\"}}>מיני</label>\r\n                </form>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    btn: {\r\n        borderColor: \"#d8d8d8\",\r\n        borderWidth: 1,\r\n        width: \"2vw\",\r\n        textAlign: \"center\"\r\n    },\r\n    text: {\r\n        fontSize: \"1.1vw\"\r\n    }\r\n})","import { useMemo, useRef, useState } from 'react';\nimport { Dimensions, StyleSheet, Text, View } from 'react-native';\nimport \"./src/style.css\";\nimport Colors from './src/components/Colors';\nimport Fonts from './src/components/Fonts';\nimport Order from './src/components/Order';\nimport Sticy from './src/components/Sticy';\nimport TextUser from './src/components/TextUser';\nimport Lottie from \"lottie-react\";\nimport Loading from \"./src/loading.json\";\nimport CountWidth from './src/components/CountWidth';\nimport { elementToSVG } from \"dom-to-svg\";\n\nimport AppliedSans from './src/fonts/AppliedSansProCnBd.ttf';\nimport PoppinsBold from \"./src/fonts/Poppins-Bold.ttf\";\nimport hemiHead from \"./src/fonts/hemi_head.ttf\";\nimport Dead_jim from \"./src/fonts/DEADJIM.TTF\";\nimport Impact from \"./src/fonts/impact.ttf\";\n\nexport default function App() {\n\n  const form = useRef(null);\n  // defalut text\n  const defaultText = \"Costum Text\";\n  // costum colors\n  const colorsArr = [\n    { name: \"שחור \", color: \"#0D0E11\", dark: false },\n    { name: \"לבן\", color: \"#E6E9EE\", dark: true },\n    { name: \"אדום\", color: \"#B0000D\", dark: false },\n    { name: \"תכלת\", color: \"#3DA1D2\", dark: true },\n    { name: \"צהוב\", color: \"#FEC500\", dark: true },\n    { name: \"קרם\", color: \"#EBD494\", dark: true },\n    { name: \"ורוד\", color: \"#ED84B6\", dark: true },\n    { name: \"ירוק\", color: \"#289901\", dark: true },\n    { name: \"זהב מבריק\", color: \"#756232\", dark: false },\n    { name: \"ורוד פוקסיה מבריק\", color: \"#cc3e7a\", dark: true },\n    { name: \"כסף מבריק\", color: \"#e7e7e7\", dark: true },\n    { name: \"שחור\", color: \"#292A2C\", dark: false },\n    { name: \"נחושת - קופרה\", color: \"#7F5735\", dark: true },\n    { name: \"כסוף\", color: \"#808284\", dark: false },\n    { name: \"זהב\", color: \"#816D42\", dark: false },\n    { name: \"תכלת\", color: \"#59b2ee\", dark: true },\n    { name: \"ירוק פסטל\", color: \"#c9dd60\", dark: false }];\n  // font array\n  const fontsArrState = [\n    { name: \"AppliedSans\", italic: true, upper: false, bold: false, path: require('./src/fonts/AppliedSansProCnBd.ttf') },\n    { name: \"Poppins-Bold\", italic: false, upper: false, bold: false, path: require(\"./src/fonts/Poppins-Bold.ttf\") },\n    { name: \"Impact\", italic: false, upper: true, bold: false, path: require(\"./src/fonts/impact.ttf\") },\n    { name: \"hemi_head\", italic: false, upper: true, bold: false, path: require(\"./src/fonts/hemi_head.ttf\") },\n    // { name: \"DEADJIM\", italic: false, upper: true, bold: true, latterSpacing: \"-0.4vw\", path: require(\"./src/fonts/DEADJIM.TTF\") },\n  ];\n\n  const inputRef = useRef(null);\n\n  const [text, setText] = useState(\"\");\n  const [color, setColor] = useState({ name: \"בחר צבע\", color: \"white\", dark: true });\n  const [font, setFont] = useState(fontsArrState[0]);\n  const [fontsArr, setFontsArr] = useState(fontsArrState);\n  const [size, setSize] = useState(1);\n  const [width, setWidth] = useState(\"s\");\n  const [dark, setDark] = useState(true);\n  const [price, setPrice] = useState(2);\n  const [load, setLoad] = useState(false);\n\n  const onChangeText = (txt) => {\n    setText(txt);\n  }\n\n  const sort = (eCurrent) => {\n    let temp = [...fontsArr];\n    temp = temp.filter((e) => e.name !== eCurrent.name);\n    temp.splice(0, 0, eCurrent);\n    setFontsArr([...temp]);\n  };\n\n  // const getDPath = (style) => {\n  //   return new Promise((reslove, reject) => {\n  //     if (font.path) {\n  //       TextToSVG.load(font.path, (err, textToSVG) => {\n  //         const svg1 = textToSVG.getD(text, \n  //           // {\n  //           //   ...style\n  //           // }\n  //         );\n  //         reslove(svg1);\n  //       });\n  //     }\n  //   })\n  // }\n\n  const createImage = async (div, style) => {\n    // const path = await getDPath(style);\n    // debugger\n    const svg = elementToSVG(div);\n    return `data:image/svg+xml;base64,${btoa(new XMLSerializer().serializeToString(svg))}`;\n  }\n\n  const sendMail = async (amount) => {\n    debugger\n    // let image = await createImage(document.querySelector(\"#image-background2\"),);\n    let image = await createImage(document.querySelector(\"#text-svg\"),);\n    let img = document.createElement(\"img\");\n    // if (width === \"s\") {\n    //   [img.width, img.height] = [1096, 132];\n    // } else {\n    //   [img.width, img.height] = [945, 94];\n    // }\n    img.src = image;\n    let data = JSON.stringify({\n      from: \"costumer@gmail.com\",\n      amonut: amount,\n      size: width,\n      price: price * amount,\n      file: image\n    });\n    let link = document.createElement(\"a\");\n    link.href = img.src;\n    link.download = \"logo.svg\";\n    link.click();\n    // setLoad(true);\n    // try {\n    //   fetch(\"https://smtp-server-sticky.herokuapp.com/\", {\n    //     method: \"POST\",\n    //     body: data,\n    //     headers: { 'Content-Type': 'application/json' }\n    //   })\n    //     .then((res) => res.text())\n    //     .then((res) => {\n    //       setLoad(false);\n    //     }).catch(() => {\n    //       setLoad(false);\n    //     });\n    // } catch (e) {\n    // }\n  }\n\n\n  useMemo(() => {\n    switch (width) {\n      case \"s\":\n        return setPrice(3);\n      case \"m\":\n        return setPrice(2);\n    }\n  }, [width]);\n\n\n  return (\n    <View style={{ alignItems: \"center\", flex: 1, paddingVertical: \"5vh\"}}>\n      {load && \n      <View style={{position: \"absolute\", width: \"100%\", height: Dimensions.get(\"window\").height, alignItems: \"center\", justifyContent: \"center\"}}>\n        <Lottie\n          animationData={Loading}\n          style={{ width: \"100px\", height: \"100px\", }}\n          autoPlay={true}\n          loop={true}\n        />\n      </View>}\n      <Sticy setText={setText} width={width} inputRef={inputRef} text={text?.length > 0 ? text : defaultText} color={color.color} font={font} dark={color?.dark} />\n      <View style={{ flexDirection: \"column\", justifyContent: \"space-around\", width: \"90%\",}}>\n        <View style={{ flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }}>\n          <TextUser inputRef={inputRef} text={text} setText={onChangeText} length={size === 1 ? 24 : 30} />\n          <Fonts sort={sort} text={text?.length > 0 ? text : defaultText} font={font} fontsArr={[...fontsArr]} setFont={(font) => setFont(font)} />\n          {/* <Colors color={color} colorsArr={colorsArr} setColor={(colo) => { setColor(colo) }} setDark={(d) => setDark(d)} /> */}\n        </View>\n        <View style={{ flexDirection: \"column\", justifyContent: \"center\", }}>\n          <CountWidth width={width} setWidth={setWidth} />\n          <Order price={price} sendMail={(am) => sendMail(am)} />\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n\n});\n","var api = require(\"!../../../../Users/User/AppData/Roaming/npm/node_modules/expo-cli/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../Users/User/AppData/Roaming/npm/node_modules/expo-cli/node_modules/css-loader/dist/cjs.js!./style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../Users/User/AppData/Roaming/npm/node_modules/expo-cli/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"* {\\r\\n    -webkit-touch-callout: none;\\r\\n    /* iOS Safari */\\r\\n    -webkit-user-select: none;\\r\\n    /* Safari */\\r\\n    -khtml-user-select: none;\\r\\n    /* Konqueror HTML */\\r\\n    -moz-user-select: none;\\r\\n    /* Old versions of Firefox */\\r\\n    -ms-user-select: none;\\r\\n    /* Internet Explorer/Edge */\\r\\n    user-select: none;\\r\\n}\\r\\n\\r\\n#image-background {\\r\\n    background: url(\\\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='400' height='400'         fill-opacity='.25' ><rect x='200' width='200' height='200' /><rect y='200' width='200' height='200' /></svg>\\\");\\r\\n    background-size: 102px 102px;\\r\\n}\\r\\n#loading{\\r\\n    background: url(\\\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='400' height='400'         fill-opacity='.25' ><rect x='200' width='200' height='200' /><rect y='200' width='200' height='200' /></svg>\\\");\\r\\n    background-size: 102px 102px;\\r\\n    background-color: rgb(162, 162, 162);\\r\\n}\\r\\n#count:focus{\\r\\n    box-shadow: 0px 0px 10px black;\\r\\n}\\r\\n#popup{\\r\\n    box-shadow: 0px 0px 10px black;\\r\\n}\\r\\n\\r\\nlabel{\\r\\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\r\\n    padding: 0 0.3vw 0 0.3vw;\\r\\n}\\r\\n\\r\\ninput[type=\\\"radio\\\"] {\\r\\n    /* remove standard background appearance */\\r\\n    -webkit-appearance: none;\\r\\n    -moz-appearance: none;\\r\\n    appearance: none;\\r\\n    /* create custom radiobutton appearance */\\r\\n    display: inline-block;\\r\\n    width: 1.1vw;\\r\\n    height: 1.1vw;\\r\\n    padding: 0.1vw;\\r\\n    /* background-color only for content */\\r\\n    background-clip: content-box;\\r\\n    border: 2px solid #c3c3c3;\\r\\n    background-color: #e7e6e7;\\r\\n    border-radius: 50%;\\r\\n  }\\r\\n  \\r\\n  /* appearance for checked radiobutton */\\r\\n  input[type=\\\"radio\\\"]:checked {\\r\\n    background-color: #1abc9c;\\r\\n    border: 2px solid #1abc9c;\\r\\n  }\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"static/media/DEADJIM.ae38f27b.TTF\";"],"sourceRoot":""}